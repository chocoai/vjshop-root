/*
 * This file is generated by jOOQ.
*/
package com.vjshop.dao;


import com.vjshop.Order;
import com.vjshop.Page;
import com.vjshop.Pageable;
import com.vjshop.generated.db.tables.TProduct;
import com.vjshop.generated.db.tables.TStockLog;
import com.vjshop.generated.db.tables.records.TStockLogRecord;
import org.apache.commons.lang.StringUtils;
import org.jooq.Configuration;
import org.jooq.JoinType;
import org.jooq.SelectQuery;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TStockLogDao extends JooqBaseDao<TStockLogRecord, com.vjshop.entity.TStockLog, Long> {

    /**
     * Create a new TStockLogDao without any configuration
     */
    public TStockLogDao() {
        super(TStockLog.T_STOCK_LOG, com.vjshop.entity.TStockLog.class);
    }

    /**
     * Create a new TStockLogDao with an attached configuration
     */
    @Autowired
    public TStockLogDao(Configuration configuration) {
        super(TStockLog.T_STOCK_LOG, com.vjshop.entity.TStockLog.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.vjshop.entity.TStockLog object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchById(Long... values) {
        return fetch(TStockLog.T_STOCK_LOG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.vjshop.entity.TStockLog fetchOneById(Long value) {
        return fetchOne(TStockLog.T_STOCK_LOG.ID, value);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByCreateDate(Timestamp... values) {
        return fetch(TStockLog.T_STOCK_LOG.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>modify_date IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByModifyDate(Timestamp... values) {
        return fetch(TStockLog.T_STOCK_LOG.MODIFY_DATE, values);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByVersion(Long... values) {
        return fetch(TStockLog.T_STOCK_LOG.VERSION, values);
    }

    /**
     * Fetch records that have <code>in_quantity IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByInQuantity(Integer... values) {
        return fetch(TStockLog.T_STOCK_LOG.IN_QUANTITY, values);
    }

    /**
     * Fetch records that have <code>memo IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByMemo(String... values) {
        return fetch(TStockLog.T_STOCK_LOG.MEMO, values);
    }

    /**
     * Fetch records that have <code>operator IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByOperator(String... values) {
        return fetch(TStockLog.T_STOCK_LOG.OPERATOR, values);
    }

    /**
     * Fetch records that have <code>out_quantity IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByOutQuantity(Integer... values) {
        return fetch(TStockLog.T_STOCK_LOG.OUT_QUANTITY, values);
    }

    /**
     * Fetch records that have <code>stock IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByStock(Integer... values) {
        return fetch(TStockLog.T_STOCK_LOG.STOCK, values);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByType(Integer... values) {
        return fetch(TStockLog.T_STOCK_LOG.TYPE, values);
    }

    /**
     * Fetch records that have <code>product IN (values)</code>
     */
    public List<com.vjshop.entity.TStockLog> fetchByProduct(Long... values) {
        return fetch(TStockLog.T_STOCK_LOG.PRODUCT, values);
    }

    public Page<com.vjshop.entity.TStockLog> findPage(Pageable pageable){
        if(StringUtils.isNotBlank(pageable.getOrderProperty())) {
            pageable.setOrderProperty("createDate");
            pageable.setOrderDirection(Order.Direction.desc);
        }
        SelectQuery query = this.getDslContext().select(TStockLog.T_STOCK_LOG.fields()).from(TStockLog.T_STOCK_LOG).getQuery();
        if(StringUtils.isNotBlank(pageable.getSearchValue()) && StringUtils.isNotBlank(pageable.getSearchProperty())){
            if(StringUtils.equals(pageable.getSearchProperty(),"product.sn")){
                query.addConditions(TProduct.T_PRODUCT.SN.like("%"+pageable.getSearchValue()+"%"));
                query.addJoin(TProduct.T_PRODUCT, JoinType.JOIN,TProduct.T_PRODUCT.ID.eq(TStockLog.T_STOCK_LOG.PRODUCT));
                pageable.setSearchProperty(null);
                pageable.setSearchValue(null);
            }
        }
        return  super.findPage(query,pageable);
    }
}
